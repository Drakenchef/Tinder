version: "3.8"
services:
  backend:
    env_file:
      - .env
    container_name: TheTinder
    depends_on:
      db:
        condition: service_started
    ports:
      - "8000:8000"
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./configs:/out/configs
      - ./.env:/out/.env
      - images_vol:/app/images
    restart: always
    networks:
      - my-network

  db:
    env_file:
      - .env
    image: postgres:15
    container_name: TheTinder-db
    ports:
      - "127.0.0.1:5438:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./build/sql/1_create.sql:/docker-entrypoint-initdb.d/initdb.sql
    restart: always
    networks:
      - my-network
  #
  nginx:
    image: nginx:latest
    container_name: theverest-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./frontend:/var/www/html
      - images_vol:/app/images
      - certbot-etc:/etc/letsencrypt
    depends_on:
      - backend
    networks:
      - my-network

  certbot:
    image: certbot/certbot
    container_name: theverest-certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - ./frontend:/var/www/html
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on:
      - nginx
    networks:
      - my-network

networks:
  my-network:
    name: my-network
    driver: bridge

volumes:
  images_vol:
  certbot-etc: